'use strict';

var _powerAssertRecorder = function () { function PowerAssertRecorder() { this.captured = []; } PowerAssertRecorder.prototype._capt = function _capt(value, espath) { this.captured.push({ value: value, espath: espath }); return value; }; PowerAssertRecorder.prototype._expr = function _expr(value, source) { var capturedValues = this.captured; this.captured = []; return { powerAssertContext: { value: value, events: capturedValues }, source: source }; }; return PowerAssertRecorder; }();

var _ava = require('ava');

var _ava2 = _interopRequireDefault(_ava);

var _apiCaller = require('../apiCaller');

var _apiCaller2 = _interopRequireDefault(_apiCaller);

var _nock = require('nock');

var _nock2 = _interopRequireDefault(_nock);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

(0, _ava2.default)('method defaults to GET', function (t) {
  var reply = { foo: 'bar' };
  (0, _nock2.default)(_apiCaller.API_URL).get('/foo').reply(200, reply);
  return (0, _apiCaller2.default)('foo').then(function (response) {
    var _rec = new _powerAssertRecorder(),
        _rec2 = new _powerAssertRecorder();

    t.deepEqual(_rec._expr(_rec._capt(response, 'arguments/0'), {
      content: 't.deepEqual(response, reply)',
      filepath: 'client/util/__tests__/apiCaller.spec.js',
      line: 11
    }), _rec2._expr(_rec2._capt(reply, 'arguments/1'), {
      content: 't.deepEqual(response, reply)',
      filepath: 'client/util/__tests__/apiCaller.spec.js',
      line: 11
    }));
  });
});

(0, _ava2.default)('sends the body', function (t) {
  var body = { id: 5 };
  var reply = { foo: 'bar' };
  (0, _nock2.default)(_apiCaller.API_URL).post('/foo', body).reply(200, reply);
  return (0, _apiCaller2.default)('foo', 'post', body).then(function (response) {
    var _rec3 = new _powerAssertRecorder(),
        _rec4 = new _powerAssertRecorder();

    t.deepEqual(_rec3._expr(_rec3._capt(response, 'arguments/0'), {
      content: 't.deepEqual(response, reply)',
      filepath: 'client/util/__tests__/apiCaller.spec.js',
      line: 22
    }), _rec4._expr(_rec4._capt(reply, 'arguments/1'), {
      content: 't.deepEqual(response, reply)',
      filepath: 'client/util/__tests__/apiCaller.spec.js',
      line: 22
    }));
  });
});

(0, _ava2.default)('returns the error', function (t) {
  var reply = { message: 'Errrrrrrrrr' };
  (0, _nock2.default)(_apiCaller.API_URL).get('/send_error').reply(500, reply);
  return (0, _apiCaller2.default)('send_error').then(function (error) {
    var _rec5 = new _powerAssertRecorder(),
        _rec6 = new _powerAssertRecorder();

    t.deepEqual(_rec5._expr(_rec5._capt(error, 'arguments/0'), {
      content: 't.deepEqual(error, reply)',
      filepath: 'client/util/__tests__/apiCaller.spec.js',
      line: 32
    }), _rec6._expr(_rec6._capt(reply, 'arguments/1'), {
      content: 't.deepEqual(error, reply)',
      filepath: 'client/util/__tests__/apiCaller.spec.js',
      line: 32
    }));
  });
});
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(_powerAssertRecorder, '_powerAssertRecorder', '/Users/ollieelmgren/Desktop/coding_challenge/client/util/__tests__/apiCaller.spec.js');
}();

;
//# sourceMappingURL=../../../node_modules/.cache/ava/05c7b2f091065797461ea0d41824e9ce.js.map