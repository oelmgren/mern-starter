{"version":3,"sources":["PostReducer.spec.js"],"names":["postReducer","data","name","title","content","_id","cuid","slug","t","deepEqual","posts"],"mappings":";;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAEA,mBAAK,gCAAL,EAAuC,2BACrCA,qBADqC,EAErC,EAAEC,MAAM,CAAC,KAAD,CAAR,EAFqC,EAGrC,0BAAQ;AACNC,QAAM,OADA;AAENC,SAAO,YAFD;AAGNC,WAAS,cAHH;AAINC,OAAK,IAJC;AAKNC,QAAM,IALA;AAMNC,QAAM;AANA,CAAR,CAHqC,EAWrC,EAAEN,MAAM,CAAC;AACPC,UAAM,OADC;AAEPC,WAAO,YAFA;AAGPC,aAAS,cAHF;AAIPC,SAAK,IAJE;AAKPC,UAAM,IALC;AAMPC,UAAM;AANC,GAAD,EAOL,KAPK,CAAR,EAXqC,CAAvC;;AAqBA,mBAAK,mCAAL,EAA0C,2BACxCP,qBADwC,EAExC,EAAEC,MAAM,CAAC;AACPC,UAAM,OADC;AAEPC,WAAO,YAFA;AAGPC,aAAS,cAHF;AAIPE,UAAM,KAJC;AAKPD,SAAK,CALE;AAMPE,UAAM;AANC,GAAD,CAAR,EAFwC,EAUxC,6BAAW,KAAX,CAVwC,EAWxC,EAAEN,MAAM,EAAR,EAXwC,CAA1C;;AAcA,mBAAK,iCAAL,EAAwC,2BACtCD,qBADsC,EAEtC,EAAEC,MAAM,EAAR,EAFsC,EAGtC,2BAAS,CACP;AACEC,QAAM,OADR;AAEEC,SAAO,YAFT;AAGEC,WAAS,cAHX;AAIEC,OAAK,IAJP;AAKEC,QAAM,IALR;AAMEC,QAAM;AANR,CADO,CAAT,CAHsC,EAatC,EAAEN,MAAM,CAAC;AACPC,UAAM,OADC;AAEPC,WAAO,YAFA;AAGPC,aAAS,cAHF;AAIPC,SAAK,IAJE;AAKPC,UAAM,IALC;AAMPC,UAAM;AANC,GAAD,CAAR,EAbsC,CAAxC;;AAuBA,mBAAK,mBAAL,EAA0B,aAAK;AAAA;AAAA;;AAC7BC,IAAEC,SAAF,uBACE,sCAAS;AACPC,sBAAO,EAAET,iBAAM,CAAC,KAAD,CAAN,kEAAF,EAAP;AADO,GAAT,6BADF;AAAA;AAAA;AAAA;AAAA,8BAIE,CAAC,KAAD,CAJF;AAAA;AAAA;AAAA;AAAA;AAMD,CAPD;;AASA,mBAAK,kBAAL,EAAyB,aAAK;AAAA;AAAA;;AAC5BO,IAAEC,SAAF,yBACE,sCAAQ;AACNC,uBAAO,EAAET,kBAAM,aAAC,EAAEK,MAAM,KAAR,EAAD,8EAAN,kEAAF,EAAP;AADM,GAAR,8BAEG,KAFH,CADF;AAAA;AAAA;AAAA;AAAA,8BAIE,EAAEA,MAAM,KAAR,EAJF;AAAA;AAAA;AAAA;AAAA;AAMD,CAPD","file":"PostReducer.spec.js","sourcesContent":["import test from 'ava';\nimport { reducerTest } from 'redux-ava';\nimport postReducer, { getPost, getPosts } from '../PostReducer';\nimport { addPost, deletePost, addPosts } from '../PostActions';\n\ntest('action for ADD_POST is working', reducerTest(\n  postReducer,\n  { data: ['foo'] },\n  addPost({\n    name: 'prank',\n    title: 'first post',\n    content: 'Hello world!',\n    _id: null,\n    cuid: null,\n    slug: 'first-post',\n  }),\n  { data: [{\n    name: 'prank',\n    title: 'first post',\n    content: 'Hello world!',\n    _id: null,\n    cuid: null,\n    slug: 'first-post',\n  }, 'foo'] },\n));\n\ntest('action for DELETE_POST is working', reducerTest(\n  postReducer,\n  { data: [{\n    name: 'prank',\n    title: 'first post',\n    content: 'Hello world!',\n    cuid: 'abc',\n    _id: 1,\n    slug: 'first-post',\n  }] },\n  deletePost('abc'),\n  { data: [] },\n));\n\ntest('action for ADD_POSTS is working', reducerTest(\n  postReducer,\n  { data: [] },\n  addPosts([\n    {\n      name: 'prank',\n      title: 'first post',\n      content: 'Hello world!',\n      _id: null,\n      cuid: null,\n      slug: 'first-post',\n    },\n  ]),\n  { data: [{\n    name: 'prank',\n    title: 'first post',\n    content: 'Hello world!',\n    _id: null,\n    cuid: null,\n    slug: 'first-post',\n  }] },\n));\n\ntest('getPosts selector', t => {\n  t.deepEqual(\n    getPosts({\n      posts: { data: ['foo'] },\n    }),\n    ['foo']\n  );\n});\n\ntest('getPost selector', t => {\n  t.deepEqual(\n    getPost({\n      posts: { data: [{ cuid: '123' }] },\n    }, '123'),\n    { cuid: '123' }\n  );\n});\n\n"]}